{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onPress\",\"onLongPress\",\"onLayout\",\"navigationState\",\"route\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import useLatestCallback from'use-latest-callback';import{PlatformPressable}from\"./PlatformPressable\";var DEFAULT_ACTIVE_COLOR='rgba(255, 255, 255, 1)';var DEFAULT_INACTIVE_COLOR='rgba(255, 255, 255, 0.7)';var getActiveOpacity=function getActiveOpacity(position,routesLength,tabIndex){if(routesLength>1){var inputRange=Array.from({length:routesLength},function(_,i){return i;});return position.interpolate({inputRange:inputRange,outputRange:inputRange.map(function(i){return i===tabIndex?1:0;})});}else{return 1;}};var getInactiveOpacity=function getInactiveOpacity(position,routesLength,tabIndex){if(routesLength>1){var inputRange=Array.from({length:routesLength},function(_,i){return i;});return position.interpolate({inputRange:inputRange,outputRange:inputRange.map(function(i){return i===tabIndex?0:1;})});}else{return 0;}};var TabBarItemInternal=function TabBarItemInternal(_ref){var getAccessibilityLabel=_ref.getAccessibilityLabel,getAccessible=_ref.getAccessible,getLabelText=_ref.getLabelText,getTestID=_ref.getTestID,onLongPress=_ref.onLongPress,onPress=_ref.onPress,isFocused=_ref.isFocused,position=_ref.position,route=_ref.route,style=_ref.style,inactiveColorCustom=_ref.inactiveColor,activeColorCustom=_ref.activeColor,labelStyle=_ref.labelStyle,onLayout=_ref.onLayout,tabIndex=_ref.index,pressColor=_ref.pressColor,pressOpacity=_ref.pressOpacity,renderBadge=_ref.renderBadge,renderIcon=_ref.renderIcon,defaultTabWidth=_ref.defaultTabWidth,routesLength=_ref.routesLength,renderLabelCustom=_ref.renderLabel,_ref$android_ripple=_ref.android_ripple,android_ripple=_ref$android_ripple===void 0?{borderless:true}:_ref$android_ripple;var labelColorFromStyle=StyleSheet.flatten(labelStyle||{}).color;var activeColor=activeColorCustom!==undefined?activeColorCustom:typeof labelColorFromStyle==='string'?labelColorFromStyle:DEFAULT_ACTIVE_COLOR;var inactiveColor=inactiveColorCustom!==undefined?inactiveColorCustom:typeof labelColorFromStyle==='string'?labelColorFromStyle:DEFAULT_INACTIVE_COLOR;var activeOpacity=getActiveOpacity(position,routesLength,tabIndex);var inactiveOpacity=getInactiveOpacity(position,routesLength,tabIndex);var icon=null;var label=null;if(renderIcon){var activeIcon=renderIcon({route:route,focused:true,color:activeColor});var inactiveIcon=renderIcon({route:route,focused:false,color:inactiveColor});if(inactiveIcon!=null&&activeIcon!=null){icon=React.createElement(View,{style:styles.icon},React.createElement(Animated.View,{style:{opacity:inactiveOpacity}},inactiveIcon),React.createElement(Animated.View,{style:[StyleSheet.absoluteFill,{opacity:activeOpacity}]},activeIcon));}}var renderLabel=renderLabelCustom!==undefined?renderLabelCustom:function(labelProps){var labelText=getLabelText({route:labelProps.route});if(typeof labelText==='string'){return React.createElement(Animated.Text,{style:[styles.label,icon?{marginTop:0}:null,labelStyle,{color:labelProps.color}]},labelText);}return labelText;};if(renderLabel){var activeLabel=renderLabel({route:route,focused:true,color:activeColor});var inactiveLabel=renderLabel({route:route,focused:false,color:inactiveColor});label=React.createElement(View,null,React.createElement(Animated.View,{style:{opacity:inactiveOpacity}},inactiveLabel),React.createElement(Animated.View,{style:[StyleSheet.absoluteFill,{opacity:activeOpacity}]},activeLabel));}var tabStyle=StyleSheet.flatten(style);var isWidthSet=(tabStyle===null||tabStyle===void 0?void 0:tabStyle.width)!==undefined;var tabContainerStyle=isWidthSet?null:{width:defaultTabWidth};var scene={route:route};var accessibilityLabel=getAccessibilityLabel(scene);accessibilityLabel=typeof accessibilityLabel!=='undefined'?accessibilityLabel:getLabelText(scene);var badge=renderBadge?renderBadge(scene):null;return React.createElement(PlatformPressable,{android_ripple:android_ripple,testID:getTestID(scene),accessible:getAccessible(scene),accessibilityLabel:accessibilityLabel,accessibilityRole:\"tab\",accessibilityState:{selected:isFocused},accessibilityStates:isFocused?['selected']:[],pressColor:pressColor,pressOpacity:pressOpacity,delayPressIn:0,onLayout:onLayout,onPress:onPress,onLongPress:onLongPress,style:[styles.pressable,tabContainerStyle]},React.createElement(View,{pointerEvents:\"none\",style:[styles.item,tabStyle]},icon,label,badge!=null?React.createElement(View,{style:styles.badge},badge):null));};var MemoizedTabBarItemInternal=React.memo(TabBarItemInternal);export function TabBarItem(props){var onPress=props.onPress,onLongPress=props.onLongPress,onLayout=props.onLayout,navigationState=props.navigationState,route=props.route,rest=_objectWithoutProperties(props,_excluded);var onPressLatest=useLatestCallback(onPress);var onLongPressLatest=useLatestCallback(onLongPress);var onLayoutLatest=useLatestCallback(onLayout?onLayout:function(){});var tabIndex=navigationState.routes.indexOf(route);return React.createElement(MemoizedTabBarItemInternal,_extends({},rest,{onPress:onPressLatest,onLayout:onLayoutLatest,onLongPress:onLongPressLatest,isFocused:navigationState.index===tabIndex,route:route,index:tabIndex,routesLength:navigationState.routes.length}));}var styles=StyleSheet.create({label:{margin:4,backgroundColor:'transparent',textTransform:'uppercase'},icon:{margin:2},item:{flex:1,alignItems:'center',justifyContent:'center',padding:10,minHeight:48},badge:{position:'absolute',top:0,right:0},pressable:{backgroundColor:'transparent'}});","map":{"version":3,"names":["React","Animated","StyleSheet","View","useLatestCallback","PlatformPressable","DEFAULT_ACTIVE_COLOR","DEFAULT_INACTIVE_COLOR","getActiveOpacity","position","routesLength","tabIndex","inputRange","Array","from","length","_","i","interpolate","outputRange","map","getInactiveOpacity","TabBarItemInternal","_ref","getAccessibilityLabel","getAccessible","getLabelText","getTestID","onLongPress","onPress","isFocused","route","style","inactiveColorCustom","inactiveColor","activeColorCustom","activeColor","labelStyle","onLayout","index","pressColor","pressOpacity","renderBadge","renderIcon","defaultTabWidth","renderLabelCustom","renderLabel","_ref$android_ripple","android_ripple","borderless","labelColorFromStyle","flatten","color","undefined","activeOpacity","inactiveOpacity","icon","label","activeIcon","focused","inactiveIcon","createElement","styles","opacity","absoluteFill","labelProps","labelText","Text","marginTop","activeLabel","inactiveLabel","tabStyle","isWidthSet","width","tabContainerStyle","scene","accessibilityLabel","badge","testID","accessible","accessibilityRole","accessibilityState","selected","accessibilityStates","delayPressIn","pressable","pointerEvents","item","MemoizedTabBarItemInternal","memo","TabBarItem","props","navigationState","rest","_objectWithoutProperties","_excluded","onPressLatest","onLongPressLatest","onLayoutLatest","routes","indexOf","_extends","create","margin","backgroundColor","textTransform","flex","alignItems","justifyContent","padding","minHeight","top","right"],"sources":["D:\\Programacion\\Tesis-mateo\\tesis-mateo\\node_modules\\react-native-tab-view\\src\\TabBarItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { PlatformPressable } from './PlatformPressable';\nimport type { NavigationState, Route, Scene } from './types';\n\nexport type Props<T extends Route> = {\n  position: Animated.AnimatedInterpolation<number>;\n  route: T;\n  navigationState: NavigationState<T>;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderIcon?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  onPress: () => void;\n  onLongPress: () => void;\n  defaultTabWidth?: number;\n  labelStyle?: StyleProp<TextStyle>;\n  style: StyleProp<ViewStyle>;\n  android_ripple?: PressableAndroidRippleConfig;\n};\n\nconst DEFAULT_ACTIVE_COLOR = 'rgba(255, 255, 255, 1)';\nconst DEFAULT_INACTIVE_COLOR = 'rgba(255, 255, 255, 0.7)';\n\nconst getActiveOpacity = (\n  position: Animated.AnimatedInterpolation<number>,\n  routesLength: number,\n  tabIndex: number\n) => {\n  if (routesLength > 1) {\n    const inputRange = Array.from({ length: routesLength }, (_, i) => i);\n\n    return position.interpolate({\n      inputRange,\n      outputRange: inputRange.map((i) => (i === tabIndex ? 1 : 0)),\n    });\n  } else {\n    return 1;\n  }\n};\n\nconst getInactiveOpacity = (\n  position: Animated.AnimatedInterpolation<number>,\n  routesLength: number,\n  tabIndex: number\n) => {\n  if (routesLength > 1) {\n    const inputRange = Array.from({ length: routesLength }, (_, i) => i);\n\n    return position.interpolate({\n      inputRange,\n      outputRange: inputRange.map((i: number) => (i === tabIndex ? 0 : 1)),\n    });\n  } else {\n    return 0;\n  }\n};\n\ntype TabBarItemInternalProps<T extends Route> = Omit<\n  Props<T>,\n  'navigationState'\n> & {\n  isFocused: boolean;\n  index: number;\n  routesLength: number;\n};\n\nconst TabBarItemInternal = <T extends Route>({\n  getAccessibilityLabel,\n  getAccessible,\n  getLabelText,\n  getTestID,\n  onLongPress,\n  onPress,\n  isFocused,\n  position,\n  route,\n  style,\n  inactiveColor: inactiveColorCustom,\n  activeColor: activeColorCustom,\n  labelStyle,\n  onLayout,\n  index: tabIndex,\n  pressColor,\n  pressOpacity,\n  renderBadge,\n  renderIcon,\n  defaultTabWidth,\n  routesLength,\n  renderLabel: renderLabelCustom,\n  android_ripple = { borderless: true },\n}: TabBarItemInternalProps<T>) => {\n  const labelColorFromStyle = StyleSheet.flatten(labelStyle || {}).color;\n\n  const activeColor =\n    activeColorCustom !== undefined\n      ? activeColorCustom\n      : typeof labelColorFromStyle === 'string'\n      ? labelColorFromStyle\n      : DEFAULT_ACTIVE_COLOR;\n  const inactiveColor =\n    inactiveColorCustom !== undefined\n      ? inactiveColorCustom\n      : typeof labelColorFromStyle === 'string'\n      ? labelColorFromStyle\n      : DEFAULT_INACTIVE_COLOR;\n\n  const activeOpacity = getActiveOpacity(position, routesLength, tabIndex);\n  const inactiveOpacity = getInactiveOpacity(position, routesLength, tabIndex);\n\n  let icon: React.ReactNode | null = null;\n  let label: React.ReactNode | null = null;\n\n  if (renderIcon) {\n    const activeIcon = renderIcon({\n      route,\n      focused: true,\n      color: activeColor,\n    });\n    const inactiveIcon = renderIcon({\n      route,\n      focused: false,\n      color: inactiveColor,\n    });\n\n    if (inactiveIcon != null && activeIcon != null) {\n      icon = (\n        <View style={styles.icon}>\n          <Animated.View style={{ opacity: inactiveOpacity }}>\n            {inactiveIcon}\n          </Animated.View>\n          <Animated.View\n            style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n          >\n            {activeIcon}\n          </Animated.View>\n        </View>\n      );\n    }\n  }\n\n  const renderLabel =\n    renderLabelCustom !== undefined\n      ? renderLabelCustom\n      : (labelProps: { route: T; color: string }) => {\n          const labelText = getLabelText({ route: labelProps.route });\n\n          if (typeof labelText === 'string') {\n            return (\n              <Animated.Text\n                style={[\n                  styles.label,\n                  icon ? { marginTop: 0 } : null,\n                  labelStyle,\n                  { color: labelProps.color },\n                ]}\n              >\n                {labelText}\n              </Animated.Text>\n            );\n          }\n\n          return labelText;\n        };\n\n  if (renderLabel) {\n    const activeLabel = renderLabel({\n      route,\n      focused: true,\n      color: activeColor,\n    });\n    const inactiveLabel = renderLabel({\n      route,\n      focused: false,\n      color: inactiveColor,\n    });\n\n    label = (\n      <View>\n        <Animated.View style={{ opacity: inactiveOpacity }}>\n          {inactiveLabel}\n        </Animated.View>\n        <Animated.View\n          style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n        >\n          {activeLabel}\n        </Animated.View>\n      </View>\n    );\n  }\n\n  const tabStyle = StyleSheet.flatten(style);\n  const isWidthSet = tabStyle?.width !== undefined;\n\n  const tabContainerStyle: ViewStyle | null = isWidthSet\n    ? null\n    : { width: defaultTabWidth };\n\n  const scene = { route };\n\n  let accessibilityLabel = getAccessibilityLabel(scene);\n\n  accessibilityLabel =\n    typeof accessibilityLabel !== 'undefined'\n      ? accessibilityLabel\n      : getLabelText(scene);\n\n  const badge = renderBadge ? renderBadge(scene) : null;\n\n  return (\n    <PlatformPressable\n      android_ripple={android_ripple}\n      testID={getTestID(scene)}\n      accessible={getAccessible(scene)}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"tab\"\n      accessibilityState={{ selected: isFocused }}\n      // @ts-ignore: this is to support older React Native versions\n      accessibilityStates={isFocused ? ['selected'] : []}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      delayPressIn={0}\n      onLayout={onLayout}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      style={[styles.pressable, tabContainerStyle]}\n    >\n      <View pointerEvents=\"none\" style={[styles.item, tabStyle]}>\n        {icon}\n        {label}\n        {badge != null ? <View style={styles.badge}>{badge}</View> : null}\n      </View>\n    </PlatformPressable>\n  );\n};\n\nconst MemoizedTabBarItemInternal = React.memo(\n  TabBarItemInternal\n) as typeof TabBarItemInternal;\n\nexport function TabBarItem<T extends Route>(props: Props<T>) {\n  const { onPress, onLongPress, onLayout, navigationState, route, ...rest } =\n    props;\n  const onPressLatest = useLatestCallback(onPress);\n  const onLongPressLatest = useLatestCallback(onLongPress);\n  const onLayoutLatest = useLatestCallback(onLayout ? onLayout : () => {});\n\n  const tabIndex = navigationState.routes.indexOf(route);\n\n  return (\n    <MemoizedTabBarItemInternal\n      {...rest}\n      onPress={onPressLatest}\n      onLayout={onLayoutLatest}\n      onLongPress={onLongPressLatest}\n      isFocused={navigationState.index === tabIndex}\n      route={route}\n      index={tabIndex}\n      routesLength={navigationState.routes.length}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    margin: 4,\n    backgroundColor: 'transparent',\n    textTransform: 'uppercase',\n  },\n  icon: {\n    margin: 2,\n  },\n  item: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    minHeight: 48,\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  pressable: {\n    // The label is not pressable on Windows\n    // Adding backgroundColor: 'transparent' seems to fix it\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}